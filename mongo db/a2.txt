mongod
mongo
mongoimport --db population --collection zipcodes --type json --file C:\Users\lenovo\Downloads\zip.json 


Atlanta Population

1.db.zipcodes.find({city:"ATLANTA", "state" : "GA"})

2.db.zipcodes.aggregate([{$match:{city:"ATLANTA", "state" : "GA"}}])

3.db.zipcodes.aggregate( [
 {$match:{city:"ATLANTA"}}, 
  {     $group:
 {       
 _id:"_id",
        count: { $sum: 1 }     
}   } ] )

4.db.zipcodes.aggregate( [
{$match:{city:"ATLANTA"}}, 
  {
    $group: {
       _id:"pop",
      totalAmount: { $sum: "$pop" },
    }
  }
] )


Populations By State

1.db.zipcodes.aggregate([
   { $group : { _id : "$state", totalAmount: { $sum: "$pop" } } }
 ])

2.db.zipcodes.aggregate([
   { $group : { _id : "$state", totalAmount: { $sum: "$pop" } } },
   {   $sort : { totalAmount: -1 }  }
 ])

3.db.zipcodes.aggregate([
   { $group : { _id : "$state", totalAmount: { $sum: "$pop" } } },
   {   $sort : { totalAmount: -1 }  },
   { $limit : 3 }
 ])


Populations by City

1.db.zipcodes.aggregate( [
   { $group: { _id: { state: "$state", city: "$city" }, pop: { $sum: "$pop" } } }
] )

2.db.zipcodes.aggregate( [
   { $group: { _id: { state: "$state", city: "$city" }, pop: { $sum: "$pop" } } },
   {   $sort : { pop: -1 }  }
] )

3.db.zipcodes.aggregate( [
   { $group: { _id: { state: "$state", city: "$city" }, pop: { $sum: "$pop" } } },
   {   $sort : { pop: -1 }  },
   { $limit : 3 }
] )

4.db.zipcodes.aggregate( [
   {$match:{state:"TX"}}, 
   { $group: { _id: { state: "$state", city: "$city" }, pop: { $sum: "$pop" } } },
   {   $sort : { pop: -1 }  },
   { $limit : 3 }
] )


Bonus

1.db.zipcodes.aggregate( [
   { $group: { _id: { state: "$state", city: "$city" }, avgpop: {  $avg:"$pop" } } }
] )

2.db.zipcodes.aggregate( [
   { $group: { _id: { state: "$state", city: "$city" }, avgpop: {  $avg:"$pop" } } },
   {   $sort : { avgpop: -1 }  },
   { $limit : 3 }
] )